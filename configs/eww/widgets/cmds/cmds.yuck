(include "widgets/util/revealer.yuck")

(defvar revealShutdown false)
(defvar revealRestart false)

(defwidget cmds [monitor]
  (box :class "cmds"
    (eventbox :class "white-hover cmds-button"
      :onclick "scripts/popup cmds ${monitor}"
      (box
      ""))))

(defwidget protectedcmd [toggle label command name var varname]
  (revealer-on-rightclick :class "hl-on-hover"
    :var var
    :varname varname
    :transition "slideleft"
    (hovered-sign :var var)
    (box :class "protectedcmd ${name}"
      (eventbox :class "protectedcmd-button white-hover"
        :onclick command
      label))
    (eventbox :class "protectedcmd-toggle ${name}-toggle white-hover" toggle)))

(defwidget protectedsrow []
  (box :orientation "h" :space-evenly false :halign "end" :valign "start"
    (protectedcmd
      :name "shutdown"
      :command "shutdown now"
      :var revealShutdown
      :varname "revealShutdown"
      :toggle ""
    :label "shutdown")
    (protectedcmd
      :name "restart"
      :var revealRestart
      :varname "revealRestart"
      :command "reboot"
      :toggle ""
    :label "reboot")
    (box :class "lock"
      (eventbox :class "white-hover lock-button"
        :onclick "slock"
      ""))))

(defwidget command [label command monitor]
  (box :spacing 10 :class "command" :orientation "v" :space-evenly true :halign "fill" :valign "start"
    (eventbox :class "command-button"
      :onclick "sh scripts/popup cmds ${monitor} && ${command}"
      (box :halign "start" label))))

(defwidget commands [monitor]
  (box :class "commands" :orientation "v" :space-evenly true :halign "fill" :valign "start" :hexpand true :width "100%"
    (protectedsrow)
    (command :monitor monitor :label "start docker.service" :command "kitty sh -c \"sudo systemctl start docker.service\"")
    (command :monitor monitor :label "slack" :command "slack && sleep 1 && wmctrl -r :ACTIVE: -t 5")
    (command :monitor monitor :label "code ~/.config" :command "code ~/.config")
    (command :monitor monitor :label "code ~/repos/dotfiles" :command "code ~/repos/dotfiles")
    (command :monitor monitor :label "disconnect wifi" :command "nmcli con down \"$(nmcli -t -f active,ssid dev wifi | grep '^yes' | cut -d: -f2)\"")))


(defwindow commands0
  :monitor 0
  :geometry (geometry :x "85%"
    :y "22px"
    :width "15%"
  :height "60px")
  (commands :monitor 0))

(defwindow commands1
  :monitor 1
  :geometry (geometry :x "85%"
    :y "22px"
    :width "15%"
  :height "60px")
  (commands :monitor 1))



